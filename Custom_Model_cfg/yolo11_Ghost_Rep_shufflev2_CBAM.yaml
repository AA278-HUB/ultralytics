# Ultralytics ðŸš€ AGPL-3.0 License - https://ultralytics.com/license
# YOLO11n object detection model (P3/8 - P5/32) with CBAM after P3/P4/P5 backbone outputs

nc: 80  # number of classes

scale:
  n
scales:
  n: [0.50, 0.25, 1024]
  s: [0.50, 0.50, 1024]
  m: [0.50, 1.00, 512]
  l: [1.00, 1.00, 512]
  x: [1.00, 1.50, 512]

# ---------------------- BACKBONE ----------------------
backbone:
  # [from, repeats, module, args]
  - [-1, 1, Conv, [64, 3, 2]]                      # 0  P1/2
  - [-1, 1, Conv, [128, 3, 2]]                     # 1  P2/4

  - [-1, 1, ShuffleV2Block, [256, 3, 2]]           # 2  P3/8
  - [-1, 1, CBAM, [7]]                             # 3  CBAM on P3

  - [-1, 1, ShuffleV2Block, [512, 3, 2]]           # 4  P4/16
  - [-1, 1, CBAM, [7]]                             # 5  CBAM on P4

  - [-1, 1, ShuffleV2Block, [1024, 3, 2]]          # 6  P5/32
  - [-1, 1, CBAM, [7]]                             # 7  CBAM on P5

  - [-1, 1, ShuffleV2Block, [1024, 3, 1]]          # 8
  - [-1, 1, SPPF, [1024, 5]]                       # 9
  - [-1, 2, C2PSA, [1024]]                         # 10  final backbone output (high-level)

# ---------------------- HEAD ----------------------
head:
  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]     # 11
  - [[-1, 5], 1, Concat, [1]]                      # 12  concat with P4 (CBAM)
  - [-1, 2, C3RepGhost, [512, False, 1, 0.25]]     # 13  P4 head

  - [-1, 1, nn.Upsample, [None, 2, "nearest"]]     # 14
  - [[-1, 3], 1, Concat, [1]]                      # 15  concat with P3 (CBAM)
  - [-1, 2, C3RepGhost, [256, False, 1, 0.25]]     # 16  P3 head (small)

  - [-1, 1, Conv, [256, 3, 2]]                     # 17
  - [[-1, 13], 1, Concat, [1]]                     # 18  concat with P4 head
  - [-1, 2, C3RepGhost, [512, False, 1, 0.25]]     # 19  P4 head (medium)

  - [-1, 1, Conv, [512, 3, 2]]                     # 20
  - [[-1, 10], 1, Concat, [1]]                     # 21  concat with backbone final
  - [-1, 2, C3RepGhost, [1024, True, 1, 0.25]]     # 22  P5 head (large)

  - [[16, 19, 22], 1, Detect, [nc]]                # 23  Detect(P3, P4, P5)
